// Generated by CoffeeScript 1.10.0
(function() {
  var addCheckbox, createQuickAddForms, fillDateSelects, getData, openQuickCreate, openSelect, quickCreate, updateSelectValue, updateTemplate;

  $(function() {
    getData();
    fillDateSelects();
    $('.add').click(openQuickCreate);
    $('.select .display').click(openSelect);
    $('.select .options').on('change', 'input', updateSelectValue);
    $('.updateTemplate input').change(updateTemplate);
  });

  getData = function() {
    $('.populate').each(function(i, container) {
      var checked, model, type;
      createQuickAddForms(container);
      model = $(container).data('model');
      checked = $(container).data('checked');
      if (model === 'parentLocation') {
        model = 'location';
      }
      type = $(container).data('type');
      $.ajax({
        url: '/api/' + model + '/all/json',
        error: function(jqXHR, status, error) {
          console.log(jqXHR, status, error);
        },
        success: function(objects, status, jqXHR) {
          if (!objects) {
            return;
          }
          switch (type) {
            case 'checkboxes':
              $(objects).each(function(i, object) {
                return addCheckbox(container, object, checked);
              });
          }
          $(container).addClass('loaded');
        }
      });
    });
  };

  addCheckbox = function(container, object, checked) {
    var $clone, $input, $label;
    $clone = $(container).find('.sample').clone().removeClass('sample');
    $label = $clone.find('label');
    $input = $clone.find('input');
    $input.val(object.slug).attr('id', object.slug + 'Checkbox');
    $label.text(object.name).attr('for', object.slug + 'Checkbox');
    if (checked) {
      if (object.slug === checked || checked.indexOf(object.slug) > -1) {
        $input.attr('checked', true);
      }
    }
    $clone.attr('data-slug', object.slug).appendTo(container);
    return $clone;
  };

  openSelect = function(event) {
    var $options, $select, datetype;
    $select = $(event.target).parents('.select');
    datetype = $select.attr('data-datetype');
    $options = $select.find('.options');
    $select.siblings('.select').find('.options').removeClass('open');
    $options.toggleClass('open');
  };

  updateSelectValue = function(event) {
    var $display, $options, $select, option, value;
    option = event.target;
    value = option.value;
    $select = $(option).parents('.select');
    $options = $select.find('.options');
    $display = $select.find('.display');
    $display.html(value);
    $options.removeClass('open');
  };

  createQuickAddForms = function(container) {
    var type;
    type = $(container).data('model');
    $.ajax({
      url: '/admin/' + type + '/quick-create',
      error: function(jqXHR, status, error) {
        console.log(jqXHR, status, error);
      },
      success: function(html, status, jqXHR) {
        if (!html) {
          return;
        }
        return $('.quickCreates').append(html);
      }
    });
  };

  openQuickCreate = function(event) {
    var $addForm, $button, $module, $submit, type;
    $button = $(event.target);
    type = $button.data('model');
    $module = $button.parents('.module');
    $addForm = $('.quickCreate[data-model="' + type + '"]');
    $addForm.addClass('open');
    $submit = $addForm.find('input[type="submit"]');
    $submit.click(quickCreate);
  };

  quickCreate = function(event) {
    var $form, $quickCreate, checkboxes, data, postUrl, type;
    event.preventDefault();
    $quickCreate = $(event.target).parents('.quickCreate');
    $form = $quickCreate.find('form');
    postUrl = $form.attr('action');
    data = $form.serializeArray();
    type = $quickCreate.data('model');
    checkboxes = $('.checkboxes.' + type);
    $.ajax({
      type: 'POST',
      data: data,
      url: postUrl,
      dataType: 'HTML',
      error: function(jqXHR, status, error) {
        return console.log(jqXHR, status, error);
      },
      success: function(object, status, jqXHR) {
        $quickCreate.removeClass('open');
        return addCheckbox(checkboxes, JSON.parse(object));
      }
    });
  };

  updateTemplate = function(event) {
    var $input, value;
    $input = $(event.target);
    value = $input.val();
    $('[data-template]').removeClass('show');
    return $('[data-template="' + value + '"]').addClass('show');
  };

  fillDateSelects = function() {
    return $('.date.selects').each(function(i, selects) {
      var $checkbox, $dayOptions, $monthOptions, $sample, $yearOptions, days, j, k, l, month, object, ref, results;
      $monthOptions = $(selects).find('.options.months');
      $sample = $monthOptions.find('.checkbox.sample');
      for (i = j = 0; j < 12; i = ++j) {
        month = moment.months(i);
        days = moment(i + 1, 'M').daysInMonth();
        object = {
          name: month,
          slug: month
        };
        $checkbox = addCheckbox($monthOptions, object, []);
        $checkbox.attr('data-days', days);
      }
      $dayOptions = $(selects).find('.options.days');
      $sample = $dayOptions.find('.checkbox.sample');
      for (i = k = 1; k <= 31; i = ++k) {
        object = {
          name: i,
          slug: i
        };
        $checkbox = addCheckbox($dayOptions, object, []);
      }
      $yearOptions = $(selects).find('.options.years');
      $sample = $yearOptions.find('.checkbox.sample');
      results = [];
      for (i = l = ref = moment().year(); ref <= 1899 ? l < 1899 : l > 1899; i = ref <= 1899 ? ++l : --l) {
        object = {
          name: i,
          slug: i
        };
        results.push($checkbox = addCheckbox($yearOptions, object, []));
      }
      return results;
    });
  };

}).call(this);
