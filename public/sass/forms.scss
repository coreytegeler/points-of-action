form {
	width: 100%;
	// border: 0.25em solid $dark;
	label {
		display: table;
		font-family: $sans;
		@include xSmallText;
		font-weight: 700;
		text-transform: uppercase;
		margin-bottom: .5em;
		.button {
			border: none;
			font-size: 1em;
			line-height: 1em;
			margin-left: .25em;
		}
		.instruct {
			color: $dark;
			margin-left: .5em;
			&::before {
				content: '[';
			}
			&::after {
				content: ']';
			}
		}
	}
	.input {
		width: 100%;
		display: table;
		position: relative;
		&.short {
			width: auto;
			max-width: 100%;
		}
		&::before, &::after {
			width: 2px;
			height: .5em;
			position: absolute;
			bottom: 2px;
			content: '';
			background: $dark;
		}
		&::before {
			left: 0;
		}
		&::after {
			right: 0;
		}
	}
	input[type="text"], input[type="password"], input[type="email"], .textarea, select {
		width: calc(100% - 0.8em);
		padding: 0.1em 0.4em;
		background: transparent;
		border-style: solid;
		border-color: $darker;
		border-width: 0 0 2px 0;
		font-family: $serif;
		@include smallText;
		outline: none;
		color: $darker;
		&:-webkit-autofill {
			background: none;
		}
		&.hidden {
			display: none;
		}
	}
	input {
		-webkit-appearance: none;
		outline: none;
		border-color: $dark;
		&[type="text"] {
			width: calc(100% - 0.4em - 1px);
			padding-right: 1px;
		}
		&[type="submit"] {
			width: auto;
			display: inline-block;
			font-family: $sans;
			padding: 0;
		}
	}
	.textarea {
		width: 100%;
		// max-height: 20em;
		// overflow: auto;
		padding: 0em;
		border: 2px solid $dark !important;
	}
	input.pseudo {
		display: none;
	}
	.ql-toolbar {
		display: flex;
		border-color: $dark !important;	
		border-width: 2px 2px 0 2px !important;
		svg, svg *, * {
			// color: $dark !important;
			// stroke: $dark !important;
		}
	}
	.group {
		// padding: 0 0 2em 0;
	}
	.null {
		display: none;
	}
	.row {
		width: 100%;
		display: table;
		padding: 0 0 1em 0;
		clear: both;
		.cell {
			float: left;
		}
		&.two {
			.cell {
				width: 50%;
				&:first-of-type {
					.input::after {
						display: none;
					}
				}
			}
		}
		&.header {
			.input {
				input {
					padding-left: 2px;
					width: calc(100% - 2px - 1px);
					@include largeText;
					font-family: $sans;
					font-weight: 900;
					border-bottom-width: 2px;
					padding-bottom: 0;
				}
			}
		}
	}
	[data-template] {
		display: none;
		&.show {
			display: block;
		}
	}
	&.image {
		.row img {
			width: 100%;
		}
	}
}
 
.checkboxes {
	max-height: 10.5em;
	overflow: auto;
	font-size: 1em;
	line-height: 1.1em;
	border: 2px solid $dark;
	background: $light;
	&.populate {
		.item {
			opacity: 0;
		}
		&.loaded .item {
			opacity: 1;
		}
	}
	.checkbox {
		padding: .1em 0;
		transition: color 250ms $fadeEase;
		label:hover {
			cursor: pointer;
			color: $darker;
		}
		&.empty {
			display: none;
		}
		label {
			font-family: inherit;
			font-size: inherit;
			line-height: 1.1em;
			display: table;
			margin: 0;
			text-transform: none;
			&:hover, *:hover {
				cursor: pointer;
				color: $dark;
			}
		}
		input[type="checkbox"], input[type="radio"] {
			display: none;
			&:checked~label {
				&::before {
					background: $dark;
					&:hover {
						cursor: pointer;
					}
				}
			}
		}
	}
}	

.checkboxes {
	padding: 0.25em 0.5em;
  column-count: auto;
  column-width: 50%;
  column-gap: 1em;
	.checkbox {
		label::before {
			width: 0.55em;
			height: 0.55em;
			margin-right: 0.5em;
			border-radius: 50%;
			border: solid $dark 0.1em;
			font-size: inherit;
			display: inline-block;
			content: '';
		}
	}
	&.toggle {
		min-height: auto;
		border: none;
		columns: none;
		padding: 0;
		.checkbox {
			float: left;
			margin-right: 0.5em;
		}
	}
}

.selects {
	display: flex;
	border-bottom: solid $dark 2px;
	padding: 2px 0;
	.select {
		background: transparent;
		position: relative;
		.display {
			display: inline-block;
			padding: 0 1.1em 0 0.6em;
			transition: color 200ms $fadeEase;
			&:hover {
				color: $darker;
				cursor: pointer;
			}
		}
		.options {
			max-height: calc(1.8em * 10);
			position: absolute;
			left: 0;
			top: calc(100% + 2px);
			padding: 0 0.5em;
			opacity: 0;
			pointer-events: none;
			transition: color 200ms $fadeEase;
			&.open {
				opacity: 1;
				pointer-events: all;
			}
		}
	}
}
.dateselect {
	width: 50%;
	.selects {
		width: 100%;
		display: flex;
		.select {
			position: relative;
			display: flex;
			@include noSelect;
			&.month {
				flex-grow: 1;
			}
			&.selected .display {
				color: $dark;
			}
			&:not(:last-child) .display:after {
				content: '/';
				position: absolute;
				right: 0;
				top: 0;
				background-color: transparent;
				padding: 0 .2em;
			}
			.display {
				width: calc(100% - .6em);
			}
			input {
				display: none;
			}
		}
	}
	.checkboxes {
		border-top: 0;
		&:not(.open) {
			height: 0;
			padding: 0;
			border-width: 0; 
		}
		.options {
			display: flex;
			width: 100%;
			flex-wrap: wrap;
			.checkbox {
				padding: .2em;
				@include xSmallText;
				label::before {
					// display: none;
				}
			}
		}
	}
}
.images {
	display: block;
	clear: both;
	.image {
		height: 100px;
		display: inline-block;
		margin: 0 .5em .5em 0;
		padding: 0;
		cursor: pointer;
		vertical-align: bottom;
		&.sample {
			display: none !important;
		}
		img {
			height: 100%;
		}
	}
}

.quicky {
	width: 100%;
	height: 100%;
	padding: 0;
	position: fixed;
	left: 0;
	top: 0;
	overflow: auto;
	display: none;
	background: rgba(255,255,255,0.95);
	&.saving .inner {
		pointer-events: none;
		opacity: 0.5;
	}
	.inner {
		width: 100%;
		max-width: 600px;
		height: calc(100% - 2em - 20px);
    margin: auto;
    padding-top: 2em !important;
    display: table;
    form {
    	width: 100%;
    	padding: 0;
    	margin: 0;
    	label {
    		text-transform: capitalize;
    	}
    	img {
    		max-width: 100%;
    		display: table;
    		margin: auto;
    	}
    }
	}
	&.open {
		display: block;
	}
	.x {
		width: 1.5em;
    height: 1.5em;
    padding: 1px;
		position: absolute;
		right: 1em;
		top: 1em;
		z-index: 100;
		background-position: center;
		background-repeat: no-repeat;
		background-size: contain;
		background-image: url(/img/x.svg);
		&:hover {
			cursor: pointer;
		}
	}
}