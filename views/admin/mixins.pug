mixin input(name, label, type, value, disabled)
	label(name=name) #{label}
	.input
		input(name=name, type=type, value=(value ? value : ''), disabled=disabled)

mixin textarea(name, label, value)
	label(name=name) #{label}
	.textarea(data-name=name)
	input.pseudo(name=name+'JSON', value=value)
	input.pseudo(name=name+'HTML', value=value)

mixin checkboxes(type, name, multiple, addable, value)
	if(name)
		label #{name}
	.module.checkboxes.populate(id=type+'-checkboxes', data-type='checkboxes', data-model=type, class=type, data-checked=value)
		.list.options
			+checkbox(type, 'N/A', null, multiple, (value == null ? true : false))
	if(addable)
		.add.button(data-type=type) New

mixin checkbox(type, name, value, multiple, checked)
	.item.checkbox(class=(value || value != null ? value : 'empty'))
		input(type=(multiple ? 'checkbox' : 'radio'), value=(value ? value : 'null'), name=type, id=(type+'-'+value), checked=checked)
		label(class=type, style=style, data-pop='name', for=(type+'-'+value)) #{(name ? name : '')}

mixin dateselect(date)
	if(date)
		-var month = date.month
		-var day = date.day
		-var year = date.year
	.dateselect
		.input
			.selects
				.select.month(data-type='month', data-checked=(month ? month.id : ''))
					.display= (month ? month.name : 'Month')
					//- input(name='month', type='text', value=(value ? value : ''))
				.select.day(data-type='day', data-checked=(day ? day.id : ''))
					//- input(name='day', type='text', value=(value ? value : ''))
					.display= (day ? day.name : 'Day')
				.select.year(data-type='year', data-checked=(year ? year.id : ''))
					//- input(name='year', type='text', value=(value ? value : ''))
					.display= (year ? year.name : 'Year')
		+checkboxes('month', null, false, false, month)
		+checkboxes('day', null, false, false, day)
		+checkboxes('year', null, false, false, year)

mixin coords(type, title)
	.row.two
		.cell
			+input(null, 'Latitude', 'text', (object && object[type] ? object[type].latitude : ''), true)
		.cell
			+input(null, 'Longitude', 'text', (object && object[type] ? object[type].longitude : ''), true)

mixin images(name, images, required)
	label(name=name)
		| Images
		span.instruct Drag to reorder
	.images.sortable
		input.pseudo(name='images', type='text', value=images)
		li.image.edit.sample(data-type='image')
			img
		ul
			if(images)
				each image, index in images
					li.image.edit(data-id=image.id, data-type='image')
						img(src=image.small)
	.buttons
		.add.button(data-type='image') Add Image

mixin image(name)
	label(name=name) Image
	input(name=name, class=name, type='file', required=true)